version: 0.2

env:
  variables:
    IMAGE_REPO_NAME: "xubio/sueldos/legajo"
    TASK_DEFINITION_NAME: "sueldos-legajo"

phases:
  install:
    runtime-versions:
      docker: 18
  pre_build:
    commands:
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - echo Logging in to Amazon ECR...
      # Logging in to Amazon ECR
      - $(aws ecr get-login --no-include-email --region $AWS_REGION)
      - export GO111MODULE=on
      - echo Build App started on `date`
      # Building App
      - CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -tags netgo -ldflags '-w' -o main *.go
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      # Building the Docker image
      - docker build -t $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest .
      - docker tag $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG     
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      # Pushing the Docker image
      - docker push $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest
      - docker push $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo updated image $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo Writing image definitions file...
      # Writing image definitions file
      - printf '[{"name":"%s","imageUri":"%s"}]' $TASK_DEFINITION_NAME $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG > imagedefinitions.json
artifacts:
    files: imagedefinitions.json